version: "3"

services:
  db:
    image: mariadb:10
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DB}"

  redis:
    image: redis:buster
    restart: always
    command: "redis-server --requirepass ${REDIS_PASSWORD}"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    restart: always
    command: >
      /bin/sh -c "./bin/elasticsearch-plugin list | grep -q ingest-attachment
      || ./bin/elasticsearch-plugin install --batch ingest-attachment;
      /usr/local/bin/docker-entrypoint.sh"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      xpack.security.enabled: "true"

  nextcloud:
    build: ./nextcloud
    restart: always
    volumes:
      - "app_files:/var/www/html"
      - "${APP_DATA}:/var/www/html/data"
      - "${APP_CONFIG}:/var/www/html/config"
    environment:
      REDIS_HOST: redis
      REDIS_HOST_PASSWORD: "${REDIS_PASSWORD}"
      MYSQL_HOST: db
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DB}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_SECURE: ssl
      SMTP_NAME: "${SMTP_USERNAME}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      MAIL_FROM_ADDRESS: "${MAIL_FROM_ADDRESS}"
      MAIL_DOMAIN: "${MAIL_DOMAIN}"
      OVERWRITEHOST: "${PUBLIC_HOSTNAME}"
      OVERWRITEPROTOCOL: https
      TRUSTED_PROXIES: "${DOCKER_IP_RANGE}"
    depends_on:
      - db
      - redis
      - elasticsearch
    networks:
      default:
        aliases:
          - nextcloud.internal

  web:
    build: ./nginx
    restart: always
    volumes:
      - "app_files:/var/www/html:ro"
    depends_on:
      - nextcloud
    labels:
      traefik.enable: "true"
      traefik.http.routers.nextcloud.rule: "Host(`${PUBLIC_HOSTNAME}`)"
      traefik.http.routers.nextcloud.entrypoints: "https"
      traefik.http.routers.nextcloud.tls.certresolver: "letsencrypt"
      traefik.http.routers.nextcloud.tls.domains[0].main: "${PUBLIC_HOSTNAME}"

  collabora:
    image: collabora/code:latest
    restart: always
    environment:
      DONT_GEN_SSL_CERT: set
      domain: "${COLLABORA_ALLOWED_DOMAINS}"
      server_name: "${COLLABORA_HOSTNAME}"
      extra_params: --o:ssl.enable=false --o:ssl.termination=true --o:welcome.enable=false --o:net.proto=IPv4
    labels:
      traefik.enable: "true"
      traefik.http.routers.collabora.rule: "Host(`${COLLABORA_HOSTNAME}`)"
      traefik.http.routers.collabora.entrypoints: "https"
      traefik.http.routers.collabora.tls: "true" # Should fallback to Let's Encrypt Certificate

volumes:
  db:
  app_files:
  elastic_data:
